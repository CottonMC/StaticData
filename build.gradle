plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id "com.jfrog.artifactory" version "4.9.0"
	id "fabric-loom" version "0.4-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "StaticData"
group = "io.github.cottonmc"
version = "2.0.0"

repositories {
	mavenCentral()
	maven {
		url "http://server.bbkr.space:8081/artifactory/libs-release"
	}
}

sourceSets {
	testmod {
		compileClasspath += sourceSets.main.compileClasspath
		runtimeClasspath += sourceSets.main.runtimeClasspath
	}
}

dependencies {
	minecraft "com.mojang:minecraft:1.14.4"
	mappings "net.fabricmc:yarn:1.14.4+build.5"
	modApi "net.fabricmc:fabric-loader:0.9.0+build.204"
	//modApi "net.fabricmc.fabric-api:fabric-api:0.3.0+build.207"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	afterEvaluate {
		testmodImplementation(sourceSets.main.output)
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand version: project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

if(rootProject.file('private.gradle').exists()) { //Publishing details
	apply from: 'private.gradle'
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			//artifact(jar) {
			//	builtBy remapJar
			//}
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "http://server.bbkr.space:8081/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}
